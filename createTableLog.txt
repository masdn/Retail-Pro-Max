.read createTable.sql
CREATE TABLE Employee (
    EmpID INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    role TEXT NOT NULL,
    vend_name TEXT NOT NULL,
    FOREIGN KEY(vend_name) REFERENCES Vendor(vend_name)
);

CREATE TABLE Inventory (
    upc INTEGER PRIMARY KEY,
    description TEXT NOT NULL,
    quantity INTEGER DEFAULT 0,
    price FLOAT DEFAULT 0.00,
    vendor_id INTEGER NOT NULL,
    FOREIGN KEY(vendor_id) REFERENCES Vendor(vendor_id)
);

CREATE TABLE Sales (
    receiptNo INTEGER PRIMARY KEY,
    date TEXT DEFAULT CURRENT_TIMESTAMP,
    EmpID INTEGER NOT NULL,
    CustPhone INTEGER NOT NULL,
    upc INTEGER NOT NULL,
    FOREIGN KEY(EmpID) REFERENCES Employee(EmpID),
    FOREIGN KEY(CustPhone) REFERENCES Customers(phoneNo),
    FOREIGN KEY(upc) REFERENCES Inventory(upc)
);

CREATE TABLE Customers (
    phoneNo INTEGER PRIMARY KEY,
    name TEXT NOT NULL
);

CREATE TABLE Vendor (
    vendor_id INTEGER PRIMARY KEY,
    vend_name TEXT NOT NULL
);
.tables
Customers  Employee   Inventory  Sales      Vendor   
.schema Vendor
CREATE TABLE Vendor (
    vendor_id INTEGER PRIMARY KEY,
    vend_name TEXT NOT NULL
);
.schema Inventory
CREATE TABLE Inventory (
    upc INTEGER PRIMARY KEY,
    description TEXT NOT NULL,
    quantity INTEGER DEFAULT 0,
    price FLOAT DEFAULT 0.00,
    vendor_id INTEGER NOT NULL,
    FOREIGN KEY(vendor_id) REFERENCES Vendor(vendor_id)
);
.schema Sales
CREATE TABLE Sales (
    receiptNo INTEGER PRIMARY KEY,
    date TEXT DEFAULT CURRENT_TIMESTAMP,
    EmpID INTEGER NOT NULL,
    CustPhone INTEGER NOT NULL,
    upc INTEGER NOT NULL,
    FOREIGN KEY(EmpID) REFERENCES Employee(EmpID),
    FOREIGN KEY(CustPhone) REFERENCES Customers(phoneNo),
    FOREIGN KEY(upc) REFERENCES Inventory(upc)
);
.schema Customers
CREATE TABLE Customers (
    phoneNo INTEGER PRIMARY KEY,
    name TEXT NOT NULL
);
.schema Employee
CREATE TABLE Employee (
    EmpID INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    role TEXT NOT NULL,
    vend_name TEXT NOT NULL,
    FOREIGN KEY(vend_name) REFERENCES Vendor(vend_name)
);

